user             http http;
worker_processes  1;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;


    server {
        listen       80;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
	}
    }
    


    server {
        listen  443;

        server_tokens off; ## Don't show the nginx version number, a security best practice
        root /usr/share/nginx/html;
	index  index.html index.htm;

        ## Strong SSL Security
        ## https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html & https://cipherli.st/
        ##
        ## Generate a strong SSL-Certificate and DHE parameter:
        ## openssl genrsa -out /etc/ssl/private/zarafa.key 4096
        ## openssl req -new -sha512 -key /etc/ssl/private/zarafa.key -out /tmp/zarafa.csr
        ## openssl x509 -req -days 3650 -in /tmp/zarafa.csr -signkey /etc/ssl/private/zarafa.key -out /etc/ssl/private/zarafa.crt
        ## openssl dhparam -out /etc/ssl/private/zarafa.dh 4096
        ## chmod go-rwx /etc/ssl/private/zarafa.*;
        ## chmod u+rw /etc/ssl/private/zarafa.*
        ## chown root:root /etc/ssl/private/zarafa.*
        ##
        ssl on;
        ssl_certificate_key /etc/ssl/private/zarafa.key;
        ssl_certificate /etc/ssl/private/zarafa.crt;
        ssl_dhparam /etc/ssl/private/zarafa.dh;

        ## https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
        ## The recommended cipher suite for backwards compatibility (IE6/WinXP):
        ssl_ciphers 'AES256+EECDH:AES256+EDH:!aNULL';
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:50m;
        ssl_session_timeout 5m;

        ## [Optional] If your certficate has OCSP, enable OCSP stapling to reduce the overhead and latency of running SSL.
        ## Replace with your ssl_trusted_certificate. For more info see:
        ## - https://medium.com/devops-programming/4445f4862461
        ## - https://www.ruby-forum.com/topic/4419319
        ## - https://www.digitalocean.com/community/tutorials/how-to-configure-ocsp-stapling-on-apache-and-nginx
        ## - https://raymii.org/s/tutorials/OCSP_Stapling_on_nginx.html
        ## - http://freiburg79.de/ocsp-stapling-mit-nginx/
        # ssl_stapling on;
        # ssl_stapling_verify on;
        # ssl_stapling_file /etc/ssl/private/de-autorisation-m.ocsp;
        # resolver 208.67.222.222 208.67.222.220 valid=300s; # Can change to your DNS resolver if desired
        # resolver_timeout 5s;

        # HIDDEN FILES AND FOLDERS
        rewrite ^(.*)\/\.(.*)$ @404 break;

        location = @404 {
            return 404;
        }

        location /caldav {
            add_header Strict-Transport-Security max-age=63072000;
            add_header X-Frame-Options DENY;
            add_header X-Content-Type-Options nosniff;

            proxy_pass        http://127.0.0.1:8080/caldav;
        }

        include /etc/webapps/zarafa-webapp/nginx-location.conf;
        include /etc/webapps/zarafa-webaccess/nginx-location.conf;
        include /etc/webapps/z-push/nginx-location.conf;
        include /etc/webapps/sabre-zarafa/nginx-location.conf;
    }

    server {
        listen       127.0.0.1:141;
	location = /auth {
            add_header Auth-Status OK;
            add_header Auth-Server 127.0.0.1;  # backend ip
            add_header Auth-Port   142;        # backend port
            return 200;
        }
    }
}

mail {
    auth_http 127.0.0.1:141/auth;

    proxy  on;

    ssl_ciphers 'AES256+EECDH:AES256+EDH:!aNULL';
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_session_timeout 5m;
    ssl_session_cache shared:MAIL:50m;

    imap_capabilities "IMAP4rev1" "LITERAL+";
    #imap_capabilities  "IMAP4rev1"  "UIDPLUS"; ## default
    server {
        listen     993;
        protocol   imap;

        ssl on;
        ssl_certificate_key /etc/ssl/private/zarafa.key;
        ssl_certificate /etc/ssl/private/zarafa.crt;
        ssl_dhparam /etc/ssl/private/zarafa.dh;
    }
}

